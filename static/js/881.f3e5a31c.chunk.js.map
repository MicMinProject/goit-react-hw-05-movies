{"version":3,"file":"static/js/881.f3e5a31c.chunk.js","mappings":"4MAkDA,UA1CA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACIC,GAASC,EAAAA,EAAAA,MAWb,OATAC,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAAA,6CAE0CH,EAAOI,QAFjD,4BAPY,mCAOZ,2BAIGC,MAAK,SAAAC,GAAaP,EAAWO,EAASC,KAAKC,YAC3CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IAGkB,IAAnBZ,EAAQe,QACR,qEAEA,uBACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,cAEEC,IAAK,CACHC,aAAc,QAHlB,WAME,aACED,IAAK,CACHE,WAAY,OACZC,SAAU,OACVF,aAAc,QAJlB,qBAOWF,EAAOK,WAElB,sBAAIL,EAAOM,YAdNN,EAAOO","sources":["components/Review.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react';\r\n\r\nconst API_KEY = '68e1fd0d7aa4e116327801ed4f6bf747';\r\n\r\nfunction Review() {\r\n  const [reviews, setReviews] = useState([]);\r\n  let params = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${params.movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n      )\r\n      .then(response => {setReviews(response.data.results)})\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return(\r\n    reviews.length === 0 ? (\r\n    <p>We do not have any results for this movie</p>\r\n    ) : (\r\n    <ul>\r\n      {reviews.map(review => (\r\n        <li\r\n          key={review.id}\r\n          css={{\r\n            marginBottom: '30px',\r\n          }}\r\n        >\r\n          <p\r\n            css={{\r\n              fontWeight: 'bold',\r\n              fontSize: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            Author: {review.author}\r\n          </p>\r\n          <p>{review.content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Review ;\r\n"],"names":["useState","reviews","setReviews","params","useParams","useEffect","axios","movieId","then","response","data","results","catch","error","console","log","length","map","review","css","marginBottom","fontWeight","fontSize","author","content","id"],"sourceRoot":""}