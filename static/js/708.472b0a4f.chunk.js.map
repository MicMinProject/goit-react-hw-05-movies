{"version":3,"file":"static/js/708.472b0a4f.chunk.js","mappings":"+NAkEA,UAzDA,WACE,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAASC,EAAAA,EAAAA,MAsBf,OACE,QAAC,IAAD,eACsBC,IAAnBF,EAAOG,SACN,yBACE,gBAAMC,IAAK,CAAEC,aAAc,QAAUC,SAnBxB,SAAAC,GACnBA,EAAEC,iBACFC,IAAAA,IAAA,4DAdY,mCAcZ,iCAEyFX,EAAaY,IAChG,SAHN,gCAMGC,MAAK,SAAAC,GACJhB,EAAgBgB,EAASC,KAAKC,YAE/BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC9BG,aAAaC,QAAQ,QAASC,KAAKC,UAAUxB,EAAaY,IAAI,YAOxD,WACE,iBACEa,YAAY,mBACZC,KAAK,SACLC,SA5BS,SAAAlB,GACnB,IAAImB,EAAQnB,EAAEoB,OAAOC,MACrB7B,EAAgB,CAAE2B,MAAAA,KA2BRE,MAAO9B,EAAaY,IAAI,UAAY,GACpCmB,KAAK,UAEP,kBAAQA,KAAK,SAAb,wBAIA,cAAIzB,IAAK,CAAE0B,cAAe,QAA1B,SACGnC,EAAaoC,KAAI,SAAAC,GAAK,OACrB,wBACE,QAAC,KAAD,CAASC,GAAE,UAAKD,EAAME,IAAtB,SAA6BF,EAAMG,SAD5BH,EAAME,aAQvB,QAAC,KAAD","sources":["components/MoviesPage.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { NavLink, Outlet, useParams, useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react';\r\n\r\nconst API_KEY = '68e1fd0d7aa4e116327801ed4f6bf747';\r\n\r\nfunction MoviesPage() {\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const params = useParams();\r\n\r\n  const handleChange = e => {\r\n    let query = e.target.value;\r\n    setSearchParams({ query });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchParams.get(\r\n          'query'\r\n        )}&page=1&include_adult=false`\r\n      )\r\n      .then(response => {\r\n        setSearchResult(response.data.results);\r\n      })\r\n      .catch(error => console.log(error));\r\n    localStorage.setItem('query', JSON.stringify(searchParams.get('query')));\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      {params.movieId === undefined ? (\r\n        <>\r\n          <form css={{ marginBottom: '30px' }} onSubmit={handleSubmit}>\r\n            <input\r\n              placeholder='Enter movie name'\r\n              name=\"search\"\r\n              onChange={handleChange}\r\n              value={searchParams.get('query') || ''}\r\n              type=\"text\"\r\n            ></input>\r\n            <button type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          \r\n            <ul css={{ listStyleType: 'none' }}>\r\n              {searchResult.map(movie => (\r\n                <li key={movie.id}>\r\n                  <NavLink to={`${movie.id}`}>{movie.title}</NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          \r\n        </>\r\n      ) : (\r\n        <Outlet />\r\n      )}\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"names":["useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","params","useParams","undefined","movieId","css","marginBottom","onSubmit","e","preventDefault","axios","get","then","response","data","results","catch","error","console","log","localStorage","setItem","JSON","stringify","placeholder","name","onChange","query","target","value","type","listStyleType","map","movie","to","id","title"],"sourceRoot":""}