{"version":3,"file":"static/js/449.6cc63e5d.chunk.js","mappings":"wRAMMA,EAAU,mCAED,SAASC,IACtB,OAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACIC,EAAQ,GACRC,EAAY,GACZC,EAAiB,GACjBC,EAAkB,GAClBC,GAASC,EAAAA,EAAAA,MACTC,EAAM,GACJC,GAAWC,EAAAA,EAAAA,MAMXC,EAAa,mCAAG,8FACdC,IAAAA,IAAA,kEAC4DjB,IAC/DkB,MAAK,SAAAC,GACJV,EAAiBU,EAASC,KAAKC,WAEhCC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,kBANJ,2CAAH,qDASbC,EAAW,mCAAG,8FACZR,IAAAA,IAAA,4DAEmDjB,EAFnD,iCAEmF0B,aAAaC,QAChG,SAHA,gCAMHT,MAAK,SAAAC,GACJT,EAAkBS,EAASC,KAAKC,WAEjCC,OAAM,SAAAC,GAAK,OAAIK,QAAQC,IAAIN,MAVZ,2CAAH,qDAaXO,EAAW,mCAAG,8FACZb,IAAAA,IAAA,gEAC0DjB,IAC7DkB,MAAK,SAAAC,GACJX,EAAYW,EAASC,KAAKW,UAE3BT,OAAM,SAAAC,GAAK,OAAIK,QAAQC,IAAIN,MANZ,2CAAH,qDASXS,EAAS,mCAAG,WAAMC,GAAN,iFACVH,IADU,uBAEVL,IAFU,uBAGVT,IAHU,OAIhBT,OACyD2B,IAAvDzB,EAAe0B,MAAK,SAAA5B,GAAK,OAAIA,EAAM6B,KAAOH,KACtCvB,EAAgByB,MAAK,SAAA5B,GAAK,OAAIA,EAAM6B,KAAOH,KAC3CxB,EAAe0B,MAAK,SAAA5B,GAAK,OAAIA,EAAM6B,KAAOH,KAChDpB,EAAMN,EAAM8B,UACZjC,EACES,EAAIyB,KAAI,SAAAC,GAAK,OAAI/B,EAAU2B,MAAK,SAAAK,GAAI,OAAID,IAAUC,EAAKJ,MAAIK,SAE7DnC,EAAiBC,GAZD,4CAAH,sDAoBf,OALAmC,EAAAA,EAAAA,YAAU,WACRV,EAAUW,SAAShC,EAAOsB,QAAS,OAElC,KAGD,yBACE,eACEW,IAAK,CACHC,MAAO,OACPC,QAAS,OACTC,QAAS,SACTC,aAAc,aALlB,WAQE,eACEJ,IAAK,CACHC,MAAO,QACPI,aAAc,QAHlB,WAME,kBACEC,QAxEY,WACpBpC,GAAU,IAwEFqC,KAAK,SACLP,IAAK,CAAEK,aAAc,QAHvB,6BAOA,eACEL,IAAK,CACHQ,UAAW,WAEbC,SACgCnB,IAA9B7B,EAAciD,YAAd,0CACuCjD,EAAciD,aACjD,GAENC,IAAG,UAAKlD,EAAcmD,MAAnB,WACHX,MAAM,QACNY,OAAO,cAGX,eACEb,IAAK,CACHE,QAAS,OACTY,cAAe,SACfb,MAAO,QAJX,WAOE,cACED,IAAK,CACHe,WAAY,OACZV,aAAc,OACdW,WAAY,QAJhB,mBAOMvD,EAAcmD,MAPpB,aAO8B,IAAIK,KAC9BxD,EAAcyD,cACdC,cATJ,QAWA,aACEnB,IAAK,CACHe,WAAY,OACZV,aAAc,QAHlB,yBAM4C,GAA7B5C,EAAc2D,aAN7B,SAQA,cACEpB,IAAK,CACHe,WAAY,OACZV,aAAc,QAHlB,uBAQA,aACEL,IAAK,CACHe,WAAY,OACZV,aAAc,QAHlB,SAMG5C,EAAc4D,YAEjB,cACErB,IAAK,CACHe,WAAY,OACZV,aAAc,QAHlB,qBAQA,aACEL,IAAK,CACHe,WAAY,OACZV,aAAc,QAHlB,SAMG9C,EAAgB+D,KAAK,cAI5B,eACEtB,IAAK,CACHC,MAAO,OACPe,WAAY,OACZO,cAAe,OACflB,aAAc,OACdmB,YAAa,OACbpB,aAAc,aAPlB,WAUE,aACEJ,IAAK,CACHK,aAAc,QAFlB,sCAOA,yBACE,wBACE,QAAC,KAAD,CACEoB,MAAO,YACL,MAAO,CAAEC,MADc,EAAfC,SACmB,MAAQ,KAErCC,GAAE,OAJJ,qBASF,wBACE,QAAC,KAAD,CACEH,MAAO,YACL,MAAO,CAAEC,MADc,EAAfC,SACmB,MAAQ,KAErCC,GAAE,SAJJ,8BAWN,eACE5B,IAAK,CACH6B,gBAAiB,WAFrB,UAKE,QAAC,KAAD","sources":["components/MovieDetailsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, NavLink, Outlet, useNavigate } from 'react-router-dom';\r\n/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react';\r\n\r\nconst API_KEY = '68e1fd0d7aa4e116327801ed4f6bf747';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const [genresStringArr, setGenresStringArr] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState([]);\r\n  let movie = '';\r\n  let genresArr = [];\r\n  let trendingMovies = [];\r\n  let searchingMovies = [];\r\n  let params = useParams();\r\n  let arr = [];\r\n  const navigate = useNavigate();\r\n\r\n  const handlerReturn = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const fetchTrending = async () => {\r\n    await axios\r\n      .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\r\n      .then(response => {\r\n        trendingMovies = response.data.results;\r\n      })\r\n      .catch(error => error.status_message);\r\n  };\r\n\r\n  const fetchSearch = async () => {\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${localStorage.getItem(\r\n          'query'\r\n        )}&page=1&include_adult=false`\r\n      )\r\n      .then(response => {\r\n        searchingMovies = response.data.results;\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const fetchGenres = async () => {\r\n    await axios\r\n      .get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`)\r\n      .then(response => {\r\n        genresArr = response.data.genres;\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const findMovie = async movieId => {\r\n    await fetchGenres();\r\n    await fetchSearch();\r\n    await fetchTrending();\r\n    movie =\r\n      trendingMovies.find(movie => movie.id === movieId) === undefined\r\n        ? searchingMovies.find(movie => movie.id === movieId)\r\n        : trendingMovies.find(movie => movie.id === movieId);\r\n    arr = movie.genre_ids;\r\n    setGenresStringArr(\r\n      arr.map(genre => genresArr.find(item => genre === item.id).name)\r\n    );\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  useEffect(() => {\r\n    findMovie(parseInt(params.movieId, 10));\r\n    return;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        css={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          padding: '0 20px',\r\n          borderBottom: 'solid 2px',\r\n        }}\r\n      >\r\n        <div\r\n          css={{\r\n            width: '200px',\r\n            marginBottom: '30px',\r\n          }}\r\n        >\r\n          <button\r\n            onClick={handlerReturn}\r\n            type=\"button\"\r\n            css={{ marginBottom: '10px' }}\r\n          >\r\n            &#8592; Go back\r\n          </button>\r\n          <img\r\n            css={{\r\n              objectFit: 'contain',\r\n            }}\r\n            src={\r\n              selectedMovie.poster_path !== undefined\r\n                ? `https://image.tmdb.org/t/p/w500/${selectedMovie.poster_path}`\r\n                : ''\r\n            }\r\n            alt={`${selectedMovie.title} poster`}\r\n            width=\"200px\"\r\n            height=\"300px\"\r\n          />\r\n        </div>\r\n        <div\r\n          css={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <h2\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n              paddingTop: '40px',\r\n            }}\r\n          >\r\n            {`${selectedMovie.title} (${new Date(\r\n              selectedMovie.release_date\r\n            ).getFullYear()})`}\r\n          </h2>\r\n          <p\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            User score: {selectedMovie.vote_average * 10} %\r\n          </p>\r\n          <h3\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            Overwiew\r\n          </h3>\r\n          <p\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            {selectedMovie.overview}\r\n          </p>\r\n          <h4\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            Genres\r\n          </h4>\r\n          <p\r\n            css={{\r\n              marginLeft: '20px',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            {genresStringArr.join(' ')}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        css={{\r\n          width: '100%',\r\n          paddingTop: '30px',\r\n          paddingBottom: '30px',\r\n          marginBottom: '30px',\r\n          paddingLeft: '20px',\r\n          borderBottom: 'solid 2px',\r\n        }}\r\n      >\r\n        <p\r\n          css={{\r\n            marginBottom: '30px',\r\n          }}\r\n        >\r\n          Additional informations\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              style={({ isActive }) => {\r\n                return { color: isActive ? 'red' : '' };\r\n              }}\r\n              to={`cast`}\r\n            >\r\n              cast\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              style={({ isActive }) => {\r\n                return { color: isActive ? 'red' : '' };\r\n              }}\r\n              to={`review`}\r\n            >\r\n              reviews\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div\r\n        css={{\r\n          backgroundColor: '#e0e0e0',\r\n        }}\r\n      >\r\n        <Outlet />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["API_KEY","MovieDetailsPage","useState","genresStringArr","setGenresStringArr","selectedMovie","setSelectedMovie","movie","genresArr","trendingMovies","searchingMovies","params","useParams","arr","navigate","useNavigate","fetchTrending","axios","then","response","data","results","catch","error","status_message","fetchSearch","localStorage","getItem","console","log","fetchGenres","genres","findMovie","movieId","undefined","find","id","genre_ids","map","genre","item","name","useEffect","parseInt","css","width","display","padding","borderBottom","marginBottom","onClick","type","objectFit","src","poster_path","alt","title","height","flexDirection","marginLeft","paddingTop","Date","release_date","getFullYear","vote_average","overview","join","paddingBottom","paddingLeft","style","color","isActive","to","backgroundColor"],"sourceRoot":""}